-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.avion
(
    id bigint NOT NULL DEFAULT nextval('avion_id_seq'::regclass),
    id_modelo integer NOT NULL,
    id_compania integer NOT NULL,
    capacidad integer NOT NULL,
    dia integer NOT NULL,
    mes integer NOT NULL,
    anno integer NOT NULL,
    CONSTRAINT id_avion PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.cargo
(
    id integer NOT NULL DEFAULT nextval('cargo_id_seq'::regclass),
    nombre character(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT id_cargo PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.clase
(
    id integer NOT NULL DEFAULT nextval('clase_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT id_clase PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.cliente
(
    id bigint NOT NULL DEFAULT nextval('cliente_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    id_pais integer NOT NULL,
    dni character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT id_cliente PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.compania
(
    id integer NOT NULL DEFAULT nextval('compania_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT compania_pkey PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.compra
(
    id bigint NOT NULL DEFAULT nextval('compra_id_seq'::regclass),
    monto integer NOT NULL,
    id_cliente integer NOT NULL,
    id_pasaje integer NOT NULL,
    dia integer NOT NULL,
    mes integer NOT NULL,
    anno integer NOT NULL,
    CONSTRAINT id_compra PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.empleado
(
    id bigint NOT NULL DEFAULT nextval('empleado_id_seq'::regclass),
    dni character varying(100) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    sueldo integer NOT NULL,
    id_compania integer NOT NULL,
    dia integer NOT NULL,
    mes integer NOT NULL,
    anno integer NOT NULL,
    CONSTRAINT id_empleado PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.empleado_cargo
(
    id bigint NOT NULL DEFAULT nextval('empleado_cargo_id_seq'::regclass),
    id_empleado integer NOT NULL,
    id_cargo integer NOT NULL,
    CONSTRAINT id_empleado_cargo PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.modelo
(
    id integer NOT NULL DEFAULT nextval('modelo_id_seq'::regclass),
    nombre character varying COLLATE pg_catalog."default",
    CONSTRAINT id_modelo PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.pago
(
    id bigint NOT NULL DEFAULT nextval('pago_id_seq'::regclass),
    id_empleado integer NOT NULL,
    monto integer NOT NULL,
    dia integer NOT NULL,
    mes integer NOT NULL,
    anno integer NOT NULL,
    CONSTRAINT id_pago PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.pais
(
    id integer NOT NULL DEFAULT nextval('pais_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pais_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pasaje
(
    id bigint NOT NULL DEFAULT nextval('pasaje_id_seq'::regclass),
    id_vuelo integer,
    id_clase integer,
    CONSTRAINT id_paasje PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.vuelo
(
    id bigint NOT NULL DEFAULT nextval('vuelo_id_seq'::regclass),
    id_origen integer NOT NULL,
    id_destino integer NOT NULL,
    dia integer NOT NULL,
    mes integer NOT NULL,
    anno integer NOT NULL,
    CONSTRAINT id_vuelo PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.vuelo_avion
(
    id bigint NOT NULL DEFAULT nextval('vuelo_avion_id_seq'::regclass),
    id_vuelo integer NOT NULL,
    id_avion integer NOT NULL,
    CONSTRAINT id_vuelo_avion PRIMARY KEY (id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.vuelo_empleado
(
    id bigint NOT NULL DEFAULT nextval('vuelo_empleado_id_seq'::regclass),
    id_vuelo integer NOT NULL,
    id_empleado integer NOT NULL,
    CONSTRAINT id_vuelo_empleado PRIMARY KEY (id)
        INCLUDE(id)
);

ALTER TABLE IF EXISTS public.avion
    ADD CONSTRAINT id_compania FOREIGN KEY (id_compania)
    REFERENCES public.compania (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.avion
    ADD CONSTRAINT id_modelo FOREIGN KEY (id_modelo)
    REFERENCES public.modelo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cliente
    ADD CONSTRAINT id_pais FOREIGN KEY (id_pais)
    REFERENCES public.pais (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.compra
    ADD CONSTRAINT id_cliente FOREIGN KEY (id_cliente)
    REFERENCES public.cliente (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.compra
    ADD CONSTRAINT id_pasaje FOREIGN KEY (id_pasaje)
    REFERENCES public.pasaje (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.empleado
    ADD CONSTRAINT id_compania FOREIGN KEY (id_compania)
    REFERENCES public.compania (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.empleado_cargo
    ADD CONSTRAINT id_cargo FOREIGN KEY (id_cargo)
    REFERENCES public.cargo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.empleado_cargo
    ADD CONSTRAINT id_empleado FOREIGN KEY (id_empleado)
    REFERENCES public.empleado (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pago
    ADD CONSTRAINT id_empleado FOREIGN KEY (id_empleado)
    REFERENCES public.empleado (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pasaje
    ADD CONSTRAINT id_clase FOREIGN KEY (id_clase)
    REFERENCES public.clase (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pasaje
    ADD CONSTRAINT id_vuelo FOREIGN KEY (id_vuelo)
    REFERENCES public.vuelo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo
    ADD CONSTRAINT id_pais_destino FOREIGN KEY (id_destino)
    REFERENCES public.pais (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo
    ADD CONSTRAINT id_pais_origen FOREIGN KEY (id_origen)
    REFERENCES public.pais (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo_avion
    ADD CONSTRAINT id_avion FOREIGN KEY (id_avion)
    REFERENCES public.avion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo_avion
    ADD CONSTRAINT id_vuelo FOREIGN KEY (id_vuelo)
    REFERENCES public.vuelo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo_empleado
    ADD CONSTRAINT id_empleado FOREIGN KEY (id_empleado)
    REFERENCES public.empleado (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vuelo_empleado
    ADD CONSTRAINT id_vuelo FOREIGN KEY (id_vuelo)
    REFERENCES public.vuelo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;